
Web server : http 프로토콜을 사용해서 서비스, TCP 80

   - Apache Web server : <== Linux		<--50% 이상이 사용을 하고 있다.
   - Nginx Web Server   : <== Linux   , 성능, 보안, 쉽게 셋팅

   - IIS (internet information Service) : <==Windows Server 2016, 2019, 2022 <==service
				<== windows 10, 11 <==개발, 테스트

	         	         git / SFTP
   local    <=========================> server  (VM/AWS) 
				
1.WS2022에서 IIs 설치(Web Server)      <==Cloud OS
  -서버관리자   ==>로컬 서버 => 관리 ==>역활(Role) - Server service(16개) , 기능(Feature) -35 개
   ==>역활 또는 기능 기반 서치  => 다음 => 다음 =>Web Server(IIS) (선택) ==>기능추가 ==>다음 =>다음 =>설치

2.방화벽 확인 (TCP 80) : wf.msc
    netstat -na 	<=열려있는 포트 확인  

    shutdown -r -t 0		<== -r : 리부팅, -t 0 : 0초 뒤에 리부팅


3.IIS (인터넷 정보서비스) 관리자툴
  Default Web Site <==기본으로 생성된 Web server

 - 바인딩된 IP 		:      * 	<==서버에 셋팅된 모든 IP로 접근
 - 바인딩된 Port		:     80
 - Home Directory		:     %systemDrive%\inetpub\wwwroot	<==폴더에 홈페이지 제작파일을 업로드
 - 기본문서 (Default Document) : default.htm, default.asp, index.htm, index.html , iistart.htm
   
=========================================

#ubuntu, CentOS 에 Web Server 설치 (Nginx),   git 설치 , ssh (우분투에는 설치가 필요, 센토os는 설치가 되어 있다.)
 
#ubuntu linux에 git 설치
$ sudo apt update			<== apt : 인터넷의 패키지(리눅스 os에 설치되는 프로그램) 레파지토리에서 설치
$ sudo apt install git
$ git --version


웹 브라우져 : Web Server에 정보를 요청하는 Client Program
 - 구글 크롬 : 개발자 
 - 리눅스 : 파이어폭스
 - 맥 : 사파리
 - 윈도우 : 엣지(HTML5), 인터넷 익스플롤러(지원종료)   <==
 - 오페라 
 
#ubuntu linux 에 nginx web server 설치(TCP 80)
 1. $ sudo apt update
 2. $ sudo apt install nginx 	<==nginx 설치
 3. $ sudo systemctl status nginx 	<== nginx 서비스 상태 확인

 # 방화벽 오픈 (TCP 80) : ubuntu 에서 
 4. $ sudo ufw allow 80/tcp		<==우분투에서 방화벽 설정 (ufw : ubuntu firewall)
 5. $ sudo ufw status 		<== 방화벽 상태 확인



 # 방화벽 오픈 (TCP 80)-센토 os에서 방화벽 설정
 4. $ sudo firewall-cmd --permanent --zone=public --add-port=80/tcp		<==TCP 80 퐅트 오픈
 5. $ sudo firewall-cmd --reload 	<== 오픈한 방화벽 설정이 적용되도록 reload
 6. $ sudo firewall-cmd --list-ports	<== 현재 방화벽에서 열려있는 포트를 확인

  # nginx web server 설정 : nginx.conf    (  /etc/nginx/nginx.conf )
 6. find / -name nginx.conf	        <==nginx.conf 파일의 위치를 검색 / 

 # nginx web server 활성화된 설정 파일 (/etc/nginx/sites-available/default)
 7. cat -n /etc/nginx/sites-available/default | more
       - 바인딩된 IP : 서버에 ip
       - 바인딩된 port : TCP 80
★★★- 홈폴더 : /var/www/html	<== root /var/www/html	: 개발된 소스파일을 저장할 위치(이 페이지에 홈페이지 파일을 저장을 시킴)
       - 기본문서 : index.html index.htm		<-== index index.html index.htm

# 로그온한 계정의 홈 폴더에 
Sample_web3 (local) ============SFTP=========>Ubuntu 
web4 (git)      ===========git clone ==========>ubuntu

# 웹 서버의 홈폴더에 복사해서 서비스 :/var/www/html
 $ cp -r  <원본> <대상> 
 $ cd/var/www/html
 $ cp -r ~SFTP/web4/  .
=============
실습 내용
-------
oosung@svr-3a:/var/www/html$ ls 
Sample_web  Sample_web3  index.html  index.nginx-debian.html  web2 <-파일 목록 확인

woosung@svr-3a:/var/www/html$ ls ~/SFTP/
Sample_web  Sample_web3  web2   <-경로 폴더 위로 가기

woosung@svr-3a:/var/www/html$ cd ~/SFTP/
woosung@svr-3a:~/SFTP$ git clone "https://github.com/lakumel/web4.git"
'web4'에 복제합니다...
remote: Enumerating objects: 34, done.
remote: Counting objects: 100% (34/34), done.
remote: Compressing objects: 100% (31/31), done.
remote: Total 34 (delta 1), reused 33 (delta 0), pack-reused 0
오브젝트를 받는 중: 100% (34/34), 1.48 MiB | 7.79 MiB/s, 완료.
델타를 알아내는 중: 100% (1/1), 완료.
woosung@svr-3a:~/SFTP$ cd
woosung@svr-3a:~$ /var
bash: /var: 디렉터리입니다
woosung@svr-3a:~$ cd /var
woosung@svr-3a:/var$ /www/html
bash: /www/html: 그런 파일이나 디렉터리가 없습니다
woosung@svr-3a:/var$ /www
bash: /www: 그런 파일이나 디렉터리가 없습니다
woosung@svr-3a:/var$ cd /www/html
bash: cd: /www/html: 그런 파일이나 디렉터리가 없습니다
woosung@svr-3a:/var$ ls
backups  cache  crash  lib  local  lock  log  mail  metrics  opt  run  snap  spool  tmp  www
woosung@svr-3a:/var$ cd /www
bash: cd: /www: 그런 파일이나 디렉터리가 없습니다
woosung@svr-3a:/var$ cd www
woosung@svr-3a:/var/www$ cd html
woosung@svr-3a:/var/www/html$ ^C
woosung@svr-3a:/var/www/html$ cp -r ~/SFTP/web4
cp: '/home/woosung/SFTP/web4' 다음에 대상 파일 명령이 누락됨
자세한 정보는 'cp --help'를 입력하십시오.
woosung@svr-3a:/var/www/html$ cp -r ~/SFTP/web4 .
woosung@svr-3a:/var/www/html$ ls
Sample_web  Sample_web3  index.html  index.nginx-debian.html  web2  web4

===================






 












































 